<!DOCTYPE html>
<%- include('../common/head') %>
    <header>
        <%- include('../common/nav') %>
    </header>





    <script src="https://smtpjs.com/v3/smtp.js">
    </script>


    <body onload="NextQuestion(0)">
        
        <!--Dark Theme-->
      <button onclick="toggleDark()">
        <svg aria-hidden="true" data-prefix="fas" data-icon="moon" xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 512 512" style="height: 2rem; width: 2rem;" class="svg-inline--fa fa-moon">
          <path fill="currentColor"
            d="M32 256C32 132.2 132.3 32 255.8 32c11.36 0 29.7 1.668 40.9 3.746 9.616 1.777 11.75 14.63 3.279 19.44C245 86.5 211.2 144.6 211.2 207.8c0 109.7 99.71 193 208.3 172.3 9.561-1.805 16.28 9.324 10.11 16.95C387.9 448.6 324.8 480 255.8 480 132.1 480 32 379.6 32 256z">
          </path>
        </svg></button>
      <script type="text/javascript" src="toggleDark.js"></script>
        <main class="main-quiz">
            <!-- creating a modal for when quiz ends -->
            <div class="modal-container" id="score-modal">

                <div class="modal-content-container">

                    <h1>Congratulations, Quiz Completed.</h1>

                    <div class="grade-details">
                        <p>Attempts : 10</p>
                        <p>Wrong Answers : <span id="wrong-answers"></span></p>
                        <p>Right Answers : <span id="right-answers"></span></p>
                        <p>Grade : <span id="grade-percentage"></span>%</p>
                        <p><span id="remarks"></span></p>
                    </div>

                    <div class="modal-button-container">
                        <button onclick="closeScoreModal()">Continue</button>
                    </div>

                </div>
            </div>
            <!-- end of modal of quiz details-->

            <div class="game-quiz-container">

                <div class="game-details-container">
                    <h1>Score : <span id="player-score"></span> / 10</h1>
                    <h1> Question : <span id="question-number"></span> / 10</h1>
                </div>

                <div class="game-question-container">
                    <h1 id="display-question"></h1>
                </div>

                <div class="game-options-container">

                    <div class="modal-container" id="option-modal">

                        <div class="modal-content-container">
                            <h1>Please Pick An Option</h1>

                            <div class="modal-button-container">
                                <button onclick="closeOptionModal()">Continue</button>
                            </div>

                        </div>

                    </div>

                    <span class="span-quiz">
                        <input type="radio" id="option-one" name="option" class="radio radio-quiz" value="optionA" />
                        <label for="option-one" class="option label-quiz" id="option-one-label"></label>
                    </span>


                    <span class="span-quiz">
                        <input type="radio" id="option-two" name="option" class="radio radio-quiz" value="optionB" />
                        <label for="option-two" class="option label-quiz" id="option-two-label"></label>
                    </span>


                    <span class="span-quiz">
                        <input type="radio" id="option-three" name="option" class="radio radio-quiz" value="optionC" />
                        <label for="option-three" class="option label-quiz" id="option-three-label"></label>
                    </span>


                    <span class="span-quiz">
                        <input type="radio" id="option-four" name="option" class="radio radio-quiz" value="optionD" />
                        <label for="option-four" class="option label-quiz" id="option-four-label"></label>
                    </span>


                </div>

                <div class="next-button-container">
                    <button onclick="handleNextQuestion()">Next Question</button>
                </div>

            </div>
        </main>



        <script>
            const questions = [
                {
                    question: "Who was known as the 'King of Rock and Roll'?",
                    optionA: "Michael Jackson",
                    optionB: "Elvis Presley",
                    optionC: "Bob Dylan",
                    optionD: "Freddie Mercury",
                    correctOption: "optionB"
                },

                {
                    question: "Which instrument is commonly associated with the blues genre?",
                    optionA: "Saxophone",
                    optionB: "Electric guitar",
                    optionC: "Piano",
                    optionD: "Trumpet",
                    correctOption: "optionB"
                },

                {
                    question: "Who released the hit song 'Shape of You'?",
                    optionA: "Taylor Swift",
                    optionB: "Justin Bieber",
                    optionC: "Ed Sheeran",
                    optionD: "Adele",
                    correctOption: "optionC"
                },

                {
                    question: "Which British band is known for their song 'Yellow'?",
                    optionA: "Coldplay",
                    optionB: "The Rolling Stones",
                    optionC: "Oasis",
                    optionD: "Queen",
                    correctOption: "optionA"
                },

                {
                    question: "Who is the lead vocalist of the band U2?",
                    optionA: "Bono",
                    optionB: "Mick Jagger",
                    optionC: "Chris Martin",
                    optionD: "Bruce Springsteen",
                    correctOption: "optionA"
                },

                {
                    question: "Which musical genre originated in Jamaica and features off-beat rhythms and heavy basslines?",
                    optionA: "Country",
                    optionB: "Jazz",
                    optionC: "Hip-hop",
                    optionD: "Reggae",
                    correctOption: "optionD"
                },

                {
                    question: "Who wrote the song 'Bohemian Rhapsody'?",
                    optionA: "John Lennon",
                    optionB: "Paul McCartney",
                    optionC: "Freddie Mercury",
                    optionD: "Elton John",
                    correctOption: "optionC"
                },

                {
                    question: "Which American singer is known for hits like 'Bad Romance' and 'Poker Face'?",
                    optionA: "Beyoncé",
                    optionB: "Katy Perry",
                    optionC: "Lady Gaga",
                    optionD: "Rihanna",
                    correctOption: "optionC"
                },

                {
                    question: "Which iconic band released the album 'Sgt. Pepper's Lonely Hearts Club Band'?",
                    optionA: "The Beatles",
                    optionB: "Led Zeppelin",
                    optionC: "The Rolling Stones",
                    optionD: "Pink Floyd",
                    correctOption: "optionA"
                },

                {
                    question: `Who won the 2021 Grammy Award for Album of the Year?`,
                    optionA: "Taylor Swift",
                    optionB: "Billie Eilish",
                    optionC: "Beyoncé",
                    optionD: "Bruno Mars",
                    correctOption: "optionA"
                }

            ]


            let shuffledQuestions = [] //empty array to hold shuffled selected questions

            function handleQuestions() {
                //function to shuffle and push 10 questions to shuffledQuestions array
                while (shuffledQuestions.length <= 9) {
                    const random = questions[Math.floor(Math.random() * questions.length)]
                    if (!shuffledQuestions.includes(random)) {
                        shuffledQuestions.push(random)
                    }
                }
            }


            let questionNumber = 1
            let playerScore = 0
            let wrongAttempt = 0
            let indexNumber = 0

            // function for displaying next question in the array to dom
            function NextQuestion(index) {
                handleQuestions()
                const currentQuestion = shuffledQuestions[index]
                document.getElementById("question-number").innerHTML = questionNumber
                document.getElementById("player-score").innerHTML = playerScore
                document.getElementById("display-question").innerHTML = currentQuestion.question;
                document.getElementById("option-one-label").innerHTML = currentQuestion.optionA;
                document.getElementById("option-two-label").innerHTML = currentQuestion.optionB;
                document.getElementById("option-three-label").innerHTML = currentQuestion.optionC;
                document.getElementById("option-four-label").innerHTML = currentQuestion.optionD;

            }


            function checkForAnswer() {
                const currentQuestion = shuffledQuestions[indexNumber] //gets current Question 
                const currentQuestionAnswer = currentQuestion.correctOption //gets current Question's answer
                const options = document.getElementsByName("option"); //gets all elements in dom with name of 'option' (in this the radio inputs)
                let correctOption = null

                options.forEach((option) => {
                    if (option.value === currentQuestionAnswer) {
                        //get's correct's radio input with correct answer
                        correctOption = option.labels[0].id
                    }
                })

                //checking to make sure a radio input has been checked or an option being chosen
                if (options[0].checked === false && options[1].checked === false && options[2].checked === false && options[3].checked == false) {
                    document.getElementById('option-modal').style.display = "flex"
                }

                //checking if checked radio button is same as answer
                options.forEach((option) => {
                    if (option.checked === true && option.value === currentQuestionAnswer) {
                        document.getElementById(correctOption).style.backgroundColor = "green"
                        playerScore++
                        indexNumber++
                        //set to delay question number till when next question loads
                        setTimeout(() => {
                            questionNumber++
                        }, 1000)
                    }

                    else if (option.checked && option.value !== currentQuestionAnswer) {
                        const wrongLabelId = option.labels[0].id
                        document.getElementById(wrongLabelId).style.backgroundColor = "red"
                        document.getElementById(correctOption).style.backgroundColor = "green"
                        wrongAttempt++
                        indexNumber++
                        //set to delay question number till when next question loads
                        setTimeout(() => {
                            questionNumber++
                        }, 1000)
                    }
                })
            }



            //called when the next button is called
            function handleNextQuestion() {
                checkForAnswer()
                unCheckRadioButtons()
                //delays next question displaying for a second
                setTimeout(() => {
                    if (indexNumber <= 9) {
                        NextQuestion(indexNumber)
                    }
                    else {
                        handleEndGame()
                    }
                    resetOptionBackground()
                }, 1000);
            }

            //sets options background back to null after display the right/wrong colors
            function resetOptionBackground() {
                const options = document.getElementsByName("option");
                options.forEach((option) => {
                    document.getElementById(option.labels[0].id).style.backgroundColor = ""
                })
            }

            // unchecking all radio buttons for next question(can be done with map or foreach loop also)
            function unCheckRadioButtons() {
                const options = document.getElementsByName("option");
                for (let i = 0; i < options.length; i++) {
                    options[i].checked = false;
                }
            }

            // function for when all questions being answered
            function handleEndGame() {
                let remark = null
                let remarkColor = null

                // condition check for player remark and remark color
                if (playerScore <= 3) {
                    remark = "Bad Grades, Keep Practicing."
                    remarkColor = "red"
                }
                else if (playerScore >= 4 && playerScore < 7) {
                    remark = "Average Grades, You can do better."
                    remarkColor = "orange"
                }
                else if (playerScore >= 7) {
                    remark = "Excellent, Keep the good work going."
                    remarkColor = "green"
                }
                const playerGrade = (playerScore / 10) * 100

                //data to display to score board
                document.getElementById('remarks').innerHTML = remark
                document.getElementById('remarks').style.color = remarkColor
                document.getElementById('grade-percentage').innerHTML = playerGrade
                document.getElementById('wrong-answers').innerHTML = wrongAttempt
                document.getElementById('right-answers').innerHTML = playerScore
                document.getElementById('score-modal').style.display = "flex"

            }

            //closes score modal and resets game
            function closeScoreModal() {
                questionNumber = 1
                playerScore = 0
                wrongAttempt = 0
                indexNumber = 0
                shuffledQuestions = []
                NextQuestion(indexNumber)
                document.getElementById('score-modal').style.display = "none"
            }

            //function to close warning modal
            function closeOptionModal() {
                document.getElementById('option-modal').style.display = "none"
            }
        </script>
    </body>




    <footer>
        <%- include('../common/footer') %>
    </footer>

    </body>

    </html>